material textured
{
    u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
    sampler u_diffuseTexture
    {
        mipmap = true
        wrapS = CLAMP
        wrapT = CLAMP
        minFilter = LINEAR_MIPMAP_LINEAR
        magFilter = LINEAR
    }

    renderState
    {
        dstBlend = ONE_MINUS_SRC_ALPHA
        srcBlend = SRC_ALPHA
        blend = true
        cullFace = true
        depthTest = true
    }
    technique
    {
        pass
        {
            vertexShader = res/shaders/textured.vert
            fragmentShader = res/shaders/textured.frag
        }
    }
}

material cap : textured
{
    u_normalMixFactor = 1.00
    sampler u_diffuseTexture
    {
        path = cap_BaseColor.jpg
        mipmap = true
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR_MIPMAP_LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }
    sampler u_ormMap
    {
        path = cap_ORM.jpg
        mipmap = true
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR_MIPMAP_LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }
    sampler u_normalmapTexture
    {
        path = cap_Normal.jpg
        mipmap = false
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }
    u_albedoColor = 1.00, 1.00, 1.00
    u_occlusionScale = 1.00
    u_emissionScale = 1.00
    u_environmentMapScale = 1.00
    u_thicknessMapScale = 1.00
    u_metallicScale = 1.00
    u_smoothnessScale = 1.00
    u_albedoScale = 1.00
    u_ambientColor = 0.5, 0.5, 0.5
    u_matrixPalette = MATRIX_PALETTE
    u_specularExponent = 2
    u_modulateAlpha = 1.0

    technique
    {
        pass
        {
            defines = BUMPED;PBR_USE_ORM_MAP;MODULATE_ALPHA;PBR_USE_ALBEOD_TEXTURE_AND_COLOR;PBR_COLORSPACE_GAMMA;PBR_UNITY_BRDF_GGX;BRDF_OPT;USE_MEAN_LUMINANCE;PBR_V2;PBR_IGNORE_GI_REFLECT;PBR_SHADE;RENDER_MODE_V;SKINNING;SKINNING_JOINT_COUNT 8;SPECULAR
        }
    }
}

material face : textured
{
    u_chromakeyTranslation = 0.00, 0.00, 0.00
    u_chromakeyScale = 1.00, 1.00, 1.00
    u_ambientColor = 0.501961, 0, 0
    u_matrixPalette = MATRIX_PALETTE
    u_specularExponent = 2
    sampler u_diffuseTexture
    {
        path = green.jpg
        mipmap = false
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }

    technique
    {
        pass
        {
            defines = CHROMAKEY;RENDER_MODE_V;SKINNING;SKINNING_JOINT_COUNT 8;SPECULAR
        }
    }
}

material face_shadow : textured
{
    u_materialAlpha = 0.00
    u_occlusionScale = 1.00
    u_emissionScale = 1.00
    u_environmentMapScale = 1.00
    u_thicknessMapScale = 1.00
    u_metallicScale = 1.00
    u_smoothnessScale = 1.00
    u_albedoScale = 1.00
    u_ambientColor = 0.501961, 0, 0
    u_matrixPalette = MATRIX_PALETTE
    u_specularExponent = 2
    sampler u_diffuseTexture
    {
        path = shadow_color.jpg
        mipmap = false
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }

    technique
    {
        pass
        {
            defines = MATERIAL_ALPHA;PBR_V2;PBR_IGNORE_GI_REFLECT;PBR_SHADE;RENDER_MODE_V;SKINNING;SKINNING_JOINT_COUNT 8;SPECULAR
        }
    }
}

material hoodie_bottom : textured
{
    u_occlusionScale = 1.00
    u_emissionScale = 1.00
    u_environmentMapScale = 1.00
    u_thicknessMapScale = 1.00
    u_metallicScale = 1.00
    u_smoothnessScale = 1.00
    u_albedoScale = 1.00
    u_ambientColor = 0.5, 0.5, 0.5
    u_matrixPalette = MATRIX_PALETTE
    u_specularExponent = 2
    u_modulateAlpha = 1.0

    sampler u_diffuseTexture
    {
        path = bottom_BaseColor.jpg
        mipmap = false
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }

    technique
    {
        pass
        {
            defines = PBR_COLORSPACE_GAMMA;PBR_UNITY_BRDF_GGX;BRDF_OPT;MODULATE_ALPHA;USE_MEAN_LUMINANCE;PBR_V2;PBR_IGNORE_GI_REFLECT;PBR_SHADE;RENDER_MODE_V;SKINNING;SKINNING_JOINT_COUNT 8;SPECULAR
        }
    }
}

material hoodie_top : textured
{
    sampler u_diffuseTexture
    {
        path = top_BaseColor.jpg
        mipmap = true
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR_MIPMAP_LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }
    sampler u_ormMap
    {
        path = top_ORM.jpg
        mipmap = false
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }
    sampler u_normalmapTexture
    {
        path = top_Normal.jpg
        mipmap = false
        cubeMap = false
        wrapS = REPEAT
        wrapT = REPEAT
        minFilter = LINEAR
        magFilter = LINEAR
        tileUV = 1.0, 1.0
        offsetUV = 0.0, 0.0
    }
    u_normalMixFactor = 1.00
    u_occlusionScale = 1.00
    u_emissionScale = 1.00
    u_environmentMapScale = 1.00
    u_thicknessMapScale = 1.00
    u_metallicScale = 1.00
    u_smoothnessScale = 1.00
    u_albedoScale = 1.00
    u_ambientColor = 0.501961, 0.0901961, 0.501961
    u_cameraPosition = CAMERA_WORLD_POSITION
    u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
    u_matrixPalette = MATRIX_PALETTE
    u_specularExponent = 2
    u_modulateAlpha = 1.0

    technique
    {
        pass
        {
            defines = BUMPED;PBR_USE_ORM_MAP;MODULATE_ALPHA;PBR_COLORSPACE_GAMMA;PBR_UNITY_BRDF_GGX;BRDF_OPT;USE_MEAN_LUMINANCE;PBR_V2;PBR_IGNORE_GI_REFLECT;PBR_SHADE;RENDER_MODE_V;SKINNING;SKINNING_JOINT_COUNT 8;SPECULAR
        }
    }
}
